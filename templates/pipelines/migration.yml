parameters:
  dependsOn: ''
  deploymentName: ''
  serviceConnection: ''
  envGroup: ''

jobs:
  - deployment: '${{ parameters.deploymentName }}'
    dependsOn: '${{ parameters.dependsOn }}'
    displayName: '${{ parameters.deploymentName }}'
    environment: '${{ parameters.envGroup }}'
    pool:
      vmImage: 'windows-latest'
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
              displayName: 'Checkout source code'

            # - task: UseDotNet@2
            #   displayName: 'Use .Net 3.1.200'
            #   inputs:
            #     version: '3.1.200'

            - task: DotNetCoreCLI@2
              displayName: 'Install dotnet-ef'
              inputs:
                command: 'custom'
                custom: 'tool'
                arguments: 'install --global dotnet-ef'

            - task: AzureCLI@2
              displayName: 'Migration Script'
              inputs:
                azureSubscription: '${{ parameters.serviceConnection }}'
                ScriptType: pscore
                scriptLocation: inlineScript
                inlineScript: |
                  # Set user secrets for API project
                  cd $(Build.SourcesDirectory)\src\Equinor.Procosys.Preservation.WebApi\
                  dotnet user-secrets set "ConnectionStrings:PreservationContext" "dummydata"

                  # Create migration script for MyDbContext
                  dotnet ef migrations script `
                    --project "$(Build.SourcesDirectory)\src\Equinor.Procosys.Preservation.WebApi\Equinor.Procosys.Preservation.WebApi.csproj" `
                    --startup-project "$(Build.SourcesDirectory)\src\Equinor.Procosys.Preservation.WebApi\Equinor.Procosys.Preservation.WebApi.csproj" `
                    --output $(Build.ArtifactStagingDirectory)\SQLMigrations\migration.sql --idempotent