parameters:
  dependsOn: ''
  deploymentName: ''
  serviceConnection: ''
  envGroup: ''
  connectionString: ''
  kvName: ''
  kvRgName: ''

jobs:
  - deployment: '${{ parameters.deploymentName }}'
    dependsOn: '${{ parameters.dependsOn }}'
    displayName: '${{ parameters.deploymentName }}'
    environment: '${{ parameters.envGroup }}'
    pool:
      vmImage: 'windows-latest'
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
              displayName: 'Checkout source code'

            - task: AzurePowerShell@4
              displayName: 'Get KeyVault Secret'
              inputs:
                azurePowerShellVersion: LatestVersion
                azureSubscription: '${{ parameters.serviceConnection }}'
                ScriptType: InlineScript
                Inline: |
                    # Variables
                    $kvName = "${{ parameters.kvName }}"
                    $kvSecret = "ConnectionStrings--PreservationContext"
                    $rgName = "${{ parameters.kvRgName }}"
                        
                    # Temporarily disable firewall for Key Vault
                    Update-AzKeyVaultNetworkRuleSet -VaultName $kvName -ResourceGroupName $rgName -DefaultAction Allow
                    $secretName = (Get-AzKeyVaultSecret -VaultName $kvName -Name $kvSecret).SecretValueText
                        
                    # Create reusable variable for env task with $(kvoSecret)
                    Write-Host "##vso[task.setvariable variable=kvoSecret;issecret=true;]$secretName"
                        
                    # Enable firewall for Key Vault
                    Update-AzKeyVaultNetworkRuleSet -VaultName $kvName -ResourceGroupName $rgName -DefaultAction Deny

                    Write-Host "Checking System.DefaultWorkingDirectory:"
                    dir $(System.DefaultWorkingDirectory)/SQLMigrations/

                    Write-Host "Checking Build.ArtifactStagingDirectory:"
                    dir (Build.ArtifactStagingDirectory)\SQLMigrations\

            # Deploy Script
            - task: SqlAzureDacpacDeployment@1
              inputs:
                azureSubscription: '${{ parameters.serviceConnection }}'
                AuthenticationType: 'connectionString'
                ConnectionString: '$(kvoSecret)'
                deployType: 'SqlTask'
                SqlFile: '$(System.DefaultWorkingDirectory)/SQLMigrations/migration.sql'
                IpDetectionMethod: 'AutoDetect'