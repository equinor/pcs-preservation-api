trigger:
  branches:
    include:
      - build-test


resources:
  repositories:
  - repository: self
  - repository: templates
    type: github
    name: equinor/procosys-templates
    endpoint: Preservation - Frontend

# Global variables for the pipeline
variables:
 - template: variables/preservation-variables.yml@templates

 - name: webAppName
   value: 'pcs-pres-$(envName)-api'



#  - name: projectName
#    value: 'apitestproject_new'

stages:
- stage: Dev
  displayName: 'Build and publish to Dev'
  variables:
    envName: 'dev'
    envRg: 'pcs-preservation-dev-rg'
    serviceConnection: '${{ variables.nonProdServiceConnection }}'
    appServicePlan: 'pcs-pres-non-prod-app-service-plan'
    containerRegistry: 'pcspreservation'
    dockerRegistryServiceConnection: $(dockerRegistryServiceConnection)
    dockerfilePath: /src/Equinor.Procosys.Preservation.WebApi/Dockerfile



  jobs:
  - template: /pipelines/dockerbuild.yml@templates
    parameters:
        deploymentName: 'docker_build_push'
        dependsOn: ''
        envName: 'pcs-${{ variables.envName }}'
        dockerfilePath: ${{ variables.dockerfilePath }}
        dockerRegistryServiceConnection: ${{ variables.dockerRegistryServiceConnection }}


  # jobs:
  # - template: /pipelines/build-template.yml
  #   parameters:
  #     deploymentName: 'Build_and_push_docker_image'
  #     dependsOn:
  #     serviceConnection: ${{ variables.serviceConnection }}
  #     env: 'pcs-${{ variables.envName }}'

  # - template: /templates/pipelines/webappcontainer.yml@templates
  #   parameters:
  #     deploymentName: 'Update_Web_App'
  #     dependsOn: 'Build_and_push_docker_image'
  #     serviceConnection: ${{ variables.serviceConnection }}
  #     env: 'pcs-${{ variables.envName }}'
  #     webAppName: '${{ variables.webAppName }}'