trigger:
  branches:
    include:
      - InitialSetup

resources:
- repo: self

variables:
  System.Debug: 'true'
  vmImageName: 'ubuntu-latest'
  containerRegistry: 'pcspreservation.azurecr.io'
  nonProdServiceConnection: 'IT PLA LCI - Procosys (343069e3-ceaa-4256-bdc8-49fa3646c1c4)'
  composeFilePath: '/src/Docker-compose.yml'
  projectName: 'API'


stages:
- stage: Dev
  displayName: 'Build and publish to Dev'
  variables:
    envName: 'dev'
    serviceConnection: '${{ variables.nonProdServiceConnection }}'

  jobs:
  - template: pipelines/build-template.yml
    parameters:
      deploymentName: 'Deploy_API'
      dependsOn:
      env: 'pcs-${{ variables.envName }}'


  # - job: Build
  #   displayName: Build
  #   pool:
  #     vmImage: $(vmImageName)
  #   steps:
  #   - checkout: self
  #   - task: DockerCompose@0
  #     displayName: Build
  #     inputs:
  #       action: Build services
  #       azureSubscriptionEndpoint: ${{ variables.serviceConnection }}
  #       azureContainerRegistry: $(containerRegistry)
  #       dockerComposeFile: '$(Build.SourcesDirectory)/src/Docker-compose.yml'
  #       additionalImageTags: $(Build.BuildId)

  #   - task: DockerCompose@0
  #     displayName: Push services
  #     inputs:
  #       action: Push services
  #       azureSubscriptionEndpoint: 'IT PLA LCI - Procosys (343069e3-ceaa-4256-bdc8-49fa3646c1c4)'
  #       azureContainerRegistry: $(containerRegistry)
  #       dockerComposeFile: '$(Build.SourcesDirectory)/src/Docker-compose.yml'
  #       projectName: $(Build.Repository.Name)
  #       qualifyImageNames: true
  #       additionalImageTags: $(Build.BuildId)

    